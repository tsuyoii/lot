{"version":3,"file":"static/js/902.ccfbe085.chunk.js","mappings":"qNAQOA,EAAUC,EAAAA,EAAAA,OACXC,EAAa,CAAC,gBACPC,EAA6B,SAACC,GACvC,OAA2BC,EAAAA,EAAAA,UAASH,EAAW,IAA/C,eAAOI,EAAP,KAAcC,EAAd,KACA,GAAyBF,EAAAA,EAAAA,UAAS,IAAlC,eAAOG,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACN,GAAGN,EAAO,KAAD,EACM,UAAGA,EAAMO,YAAT,OAAG,EAAYC,YAIhC,CAACR,EAAMS,UACTH,EAAAA,EAAAA,YAAU,WAAK,IAAD,EACV,UAAAN,EAAMO,YAAN,SAAYG,KAAK,SAAU,CACvBR,OAAAA,EACAE,MAAAA,MAEN,CAACF,EAAOE,IAWV,OACI,UAAC,IAAD,CAAOO,UAAU,WAAjB,WACA,SAAC,IAAD,sBAGA,SAAC,IAAD,WACI,SAAC,IAAD,CAAQC,aAAcV,EAAQW,SAdX,SAACC,GACxBX,EAAUW,IAasDC,MAAO,CAACC,MAAM,QAA1E,SACSlB,EAAWmB,KAAI,SAAAC,GAAI,OAChB,SAACtB,EAAD,UAAoBsB,GAAPA,WAI7B,SAAC,IAAD,0BAGA,SAAC,IAAD,WACI,SAAC,IAAD,CAAOC,YAAY,sBAAsBL,MAAOV,EAAOS,SArBrC,SAACO,GACvBf,EAASe,EAAEC,OAAOP","sources":["nodeComponents/triggers/mqttComponent.tsx"],"sourcesContent":["import { Input, Row, Select, Space } from \"antd\";\nimport React, { useEffect, useState } from \"react\"\n\ninterface Params {\n    builder: string;\n    cell?:any ;\n    cellId?:string;\n}\nconst {Option} = Select\nconst BrokerData = ['Local Broker']\nexport const FakeData: React.FC<Params> = (props) => {\n    const [broker,setBroker] = useState(BrokerData[0])\n    const [topic,setTopic] = useState('')\n\n    useEffect(()=>{\n        if(props){\n            const cells = props.cell?.toJSON()\n            // setBroker()\n            // setTopic()\n        }    \n    },[props.cellId])\n    useEffect(()=>{\n        props.cell?.prop('config', {\n            broker,\n            topic\n        })\n    },[broker,topic])\n \n\n    const handleBrokerChange = (value: string) => {\n        setBroker(value)\n    }\n    const onMqttTopicChange = (e: React.FocusEvent<HTMLInputElement>)=>{\n        setTopic(e.target.value)\n    }\n\n\n    return (\n        <Space direction=\"vertical\">\n        <Row>\n            Broker\n        </Row>\n        <Row>\n            <Select defaultValue={broker} onChange={handleBrokerChange} style={{width:'100%'}}>\n                    {BrokerData.map(type => (\n                        <Option key={type}>{type}</Option>\n                    ))}\n            </Select>\n        </Row>\n        <Row>\n            MQTT Topic\n        </Row>\n        <Row>\n            <Input placeholder=\"e.g.legacy/commands\" value={topic} onChange={onMqttTopicChange}/>\n        </Row>\n        </Space>\n    );\n};"],"names":["Option","Select","BrokerData","FakeData","props","useState","broker","setBroker","topic","setTopic","useEffect","cell","toJSON","cellId","prop","direction","defaultValue","onChange","value","style","width","map","type","placeholder","e","target"],"sourceRoot":""}