{"version":3,"file":"static/js/416.3af76dbc.chunk.js","mappings":"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","sources":["nodeComponents/output/httpComponent.tsx","utils/utils.ts"],"sourcesContent":["import { Alert, AutoComplete, Card, Cascader, Checkbox, Divider, Input, Menu, Modal, Radio, Row, Select, Space, Tag, Tooltip } from \"antd\"\nimport React, { useEffect, useState } from \"react\"\nimport brace from 'brace';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/tomorrow';\nimport { useDebounce } from \"../../utils/utils\";\nimport { ExpandOutlined } from '@ant-design/icons';\n\ninterface Params {\n    builder: string;\n    cell?:any ;\n    cellId?:string;\n}\nconst {Option} = Select\nconst ReqMethodData = ['GET','POST','PUT','PATCH','DELETE']\nconst EncodingData = ['ascii','utf8','utf16le','base64','binary','hex']\nconst options = [\n    { value: 'Accept',label:'Accept' },\n    { value: 'Accept-Charset',label:'Accept-Charset' },\n    { value: 'Accept-Datetime',label:'Accept-Datetime' },\n    { value: 'Accept-Encoding',label:'Accept-Encoding' },\n    { value: 'Accept-Language',label:'Accept-Language' },\n  ];\nconst optionV = [\n    { value: 'application/atom+xml',label: 'application/atom+xml' },\n    { value: 'application/ecmascript',label: 'application/ecmascript' },\n    { value: 'application/font-woff',label: 'application/font-woff' },\n    { value: 'application/graphql',label: 'application/graphql' },\n    { value: 'application/gzip',label: 'application/gzip' },\n];\n\n\nexport const FakeData: React.FC<Params> = (props) => {\n    const cells = props.cell?.toJSON()\n    const [visible, setVisible] = React.useState(false);\n    const [bodyVisible, setBodyVisible] = React.useState(false);\n    const [confirmLoading, setConfirmLoading] = React.useState(false);\n\n    const [method,setReqMethod] = useState(cells?.config?.method || ReqMethodData[0])\n    const [uriTemplate,setUriTemplate] = useState(cells.config?.uriTemplate || '')\n    const [timeoutTemplate,setTimeoutTemplate] = useState(cells.config?.timeoutTemplate || '')\n    const [requestEncodingTemplate,setRequestEncodingTemplate] = useState(cells.config?.requestEncodingTemplate || EncodingData[0])\n    const [bodyTemplate,setBodyTemplate] = useState(cells.config?.bodyTemplate || '')\n    // 在要保存的地方使用debouncededit，这样可以一段时间之后再保存结果\n    const debouncedEdit = useDebounce(bodyTemplate,2000)\n    const [authType,setAuthType] = useState(cells.config?.authType || 'none')\n    const [usernameTemplate,setUsernameTemplate] = useState(cells.config?.authCredentials?.usernameTemplate || '')\n    const [passwordTemplate,setPasswordTemplate] = useState(cells.config?.authCredentials?.passwordTemplate || '')\n    const [authKeyTemplate,setAuthKeyTemplate] = useState(cells.config?.authCredentials?.keyTemplate || '')\n    const [authCertTemplate,setAuthCertTemplate] = useState(cells.config?.authCredentials?.certTemplate || '')\n    const [disableSSLVerification,setDisableSSLVerification] = useState(cells.config?.disableSSLVerification || false)\n    const [caCertTemplate,setCaCertTemplate] = useState(cells.config?.caCertTemplate || '')\n    const debouncedCert = useDebounce(caCertTemplate,2000)\n    const [encodingTemplate,setEncodingTemplate] = useState(cells.config?.encodingTemplate || EncodingData[0])\n    const [responsePath,setResponsePath] = useState(cells.config?.responsePath || '')\n    const [errorBehavior,setErrorBehavior] = useState(cells.config?.errorBehavior || '')\n    const [errorPath,setErrorPath] = useState(cells.config?.errorPath || '')\n\n    const [tags,setTags] = useState<any[]>(cells.config?.headerInfo || [])\n    const [cascader,setCascader]=useState([])\n    \n    const [count,setCount] = useState(0)\n\n    useEffect(()=>{\n        setReqMethod(cells.config?.method),\n        setUriTemplate(cells.config?.uriTemplate),\n        setTimeoutTemplate(cells.config?.timeoutTemplate),\n        setRequestEncodingTemplate(cells.config?.requestEncodingTemplate),\n        setBodyTemplate(cells.config?.bodyTemplate),\n        setAuthType(cells.config?.authType),\n        setUsernameTemplate(cells.config?.authCredentials?.usernameTemplate),\n        setPasswordTemplate(cells.config?.authCredentials?.passwordTemplate),\n        setAuthCertTemplate(cells.config?.authCredentials?.certTemplate),\n        setAuthKeyTemplate(cells.config?.authCredentials?.keyTemplate),\n        setDisableSSLVerification(cells.config?.disableSSLVerification),\n        setCaCertTemplate(cells.config?.caCertTemplate),\n        setEncodingTemplate(cells.config?.encodingTemplate),\n        setResponsePath(cells.config?.responsePath),\n        setErrorBehavior(cells.config?.errorBehavior),\n        setErrorPath(cells.config?.errorPath),\n        setTags(cells.config?.headerInfo || [])\n    },[props.cellId])\n\n    useEffect(()=>{\n        props.cell?.prop('config', {\n            method,\n            uriTemplate,\n            timeoutTemplate,\n            requestEncodingTemplate,\n            bodyTemplate,\n            authType,\n            config:{\n                authCredentials:{\n                    usernameTemplate,\n                    passwordTemplate,\n                    certTemplate:authCertTemplate,\n                    keyTemplate:authKeyTemplate\n                }\n            },\n            disableSSLVerification,\n            caCertTemplate,\n            encodingTemplate,\n            responsePath,\n            errorBehavior,\n            errorPath,\n            headerInfo:[...tags]\n        }) \n    },[props.cellId,method,\n        uriTemplate,\n        timeoutTemplate,\n        requestEncodingTemplate,\n        bodyTemplate,\n        authType,\n        usernameTemplate,\n        passwordTemplate,\n        authCertTemplate,\n        authKeyTemplate,\n        disableSSLVerification,\n        caCertTemplate,\n        encodingTemplate,\n        responsePath,\n        errorBehavior,\n        errorPath,\n        tags])\n\n    const onEditChange = (newValue:string)=>{\n        setBodyTemplate(newValue)\n        setCount(count+1)\n    }\n    const onOpenDialog = ()=>{\n            setVisible(true);\n    }\n    const onOpenBodyDialog = ()=>{\n            setBodyVisible(true);\n    }\n    const handleOk = () => {\n        setConfirmLoading(true);\n        setTimeout(() => {\n          setVisible(false);\n          setBodyVisible(false);\n          setConfirmLoading(false);\n        }, 500);\n    };\n    const handleCancel = () => {\n        console.log('Clicked cancel button');\n        setVisible(false);\n        setBodyVisible(false);\n    };\n    const handleReqMethodChange = (value: string) => {\n        setReqMethod(value)\n        setCount(count+1)\n    }\n    const requestHeadOption = Object(options).map((item: { value: string;label:string })=>{\n        return {\n            value:item.value,\n            label:item.label,\n            children: optionV\n        }\n    })\n    const handleClose = (removedTag: string[]) => {\n        const tempTags = tags.filter((tag: {key:string,valueTemplate:string}) => JSON.stringify(tag) !== JSON.stringify(removedTag))\n        setTags(tempTags);\n        setCount(count+1)\n        console.log(tempTags,tags)\n    };\n\n    return (\n        <Space direction=\"vertical\">\n            <Divider plain>Request</Divider>\n                <Row>\n                    Request Method\n                </Row>\n                <Row>\n                    <Select defaultValue={ReqMethodData[0]} value={method} onChange={handleReqMethodChange} style={{width:'100%'}}>\n                            {ReqMethodData.map(type => (\n                                <Option key={type}>{type}</Option>\n                            ))}\n                    </Select>\n                </Row>\n                <Row>\n                    URL Template\n                </Row>\n                <Row>\n                    <Input placeholder=\"http://foo.com,{{data.foo}}\" value={uriTemplate} onChange={e=>{\n                        setUriTemplate(e.target.value)\n                        setCount(count+1)\n                    }}/>\n                </Row>\n                <Row>\n                    Timeout Template(Seconds)\n                </Row>\n                <Row>\n                    <Input placeholder=\"30,{{data.timeout}}\" value={timeoutTemplate} onChange={e=>{\n                        setTimeoutTemplate(e.target.value)\n                        setCount(count+1)\n                    }}/>\n                </Row>\n                {\n                    method!=='GET'&&method!=='DELETE'\n                    ?<>\n                    <Row>\n                        Body Encoding Type\n                    </Row>\n                    <Row>\n                        <Select defaultValue={EncodingData[0]} value={requestEncodingTemplate} onChange={e=>{\n                            setRequestEncodingTemplate(e)\n                            setCount(count+1)\n                        }} style={{width:'100%'}}>\n                                {EncodingData.map(type => (\n                                    <Option key={type}>{type}</Option>\n                                ))}\n                        </Select>\n                    </Row>\n                    <Row>\n                        Body Template\n                    </Row>\n                    <Row>\n                        <Card style={{ width: 240 }} bodyStyle={{width: 220, overflow:'auto', padding:'8px'}} onClick={onOpenBodyDialog}>\n                            <pre>{debouncedEdit}</pre>\n                        <ExpandOutlined style={{float:'right',top:'10px'}} onClick={onOpenBodyDialog}/>\n                        </Card>\n                        <Modal\n                            title=\"Title1\"\n                            visible={bodyVisible}\n                            onOk={handleOk}\n                            confirmLoading={confirmLoading}\n                            onCancel={handleCancel}\n                            width={1000}\n                        >\n                            <AceEditor\n                                mode=\"javascript\"\n                                theme=\"tomorrow\"\n                                name=\"editor\"\n                                onChange={onEditChange}\n                                // value={editValue}\n                                value={bodyTemplate}\n                                fontSize={14}\n                                style={{ width: \"900px\"}}\n                                editorProps={{$blockScrolling: true}}\n                            />\n                        </Modal>\n                    </Row>                    \n                    </>:null\n                }\n\n            <Divider plain>Request Headers</Divider>\n                <Row>\n                    Name Template\n                </Row>\n                <Row align=\"middle\">\n                    <Cascader options={requestHeadOption} style={{ width: 240 }} value={cascader} onChange={(value:any)=>{\n                        setTags([...tags, {\n                            key:value[0],\n                            valueTemplate:value[1]\n                        }])\n                        // setCascader([])\n                        setCount(count+1)\n                    }} placeholder=\"Please select\" />\n\n                    {tags?.map((tag,index) => {\n                        const show = `${tag.key} / ${tag.valueTemplate}`\n                        // const show = tag.join('/')\n                                  return <Tag\n                                  className=\"edit-tag\"\n                                  key={tag.key+tag.valueTemplate}\n                                  closable\n                                  onClose={() => handleClose(tag)}\n                                >{show.length > 33?`${show.slice(0, 33)}...`:show}</Tag>\n                                })}\n                        \n                </Row>\n            <Divider plain>Authorization</Divider>\n                <Row>\n                    Authorization Type\n                </Row>\n                <Row>\n                    <Select defaultValue={'none'} value={authType} onChange={e=>{\n                        setAuthType(e)\n                        setCount(count+1)\n                    }} style={{width:'100%'}}>\n                        <Option key={'none'}>None</Option>\n                        <Option key={'basic'}>Basic</Option>\n                        <Option key={'clientCert'}>Client Certification</Option>\n                    </Select>\n                </Row> \n                {\n                    authType==='basic'?\n                    <>\n                        <Row>\n                            Username\n                        </Row>\n                        <Row>\n                            <Input placeholder=\"e.g.myuser or {{data.username}}\" value={usernameTemplate} onChange={e=>{\n                                setUsernameTemplate(e.target.value)\n                                setCount(count+1)\n                            }}/>\n                        </Row> \n                        <Row>\n                            Password\n                        </Row>\n                        <Row>\n                            <Input placeholder=\"e.g.mypassword or {{data.password}}\" value={passwordTemplate}onChange={e=>{\n                                setPasswordTemplate(e.target.value)\n                                setCount(count+1)\n                            }}/>\n                        </Row> \n                    </>:authType==='clientCert'?<>\n                        <Row>\n                            Client Certificate Key\n                        </Row>\n                        <Row>\n                            <AceEditor\n                                mode=\"javascript\"\n                                theme=\"tomorrow\"\n                                name=\"authKey\"\n                                onChange={(newValue:string)=>{\n                                    setAuthKeyTemplate(newValue)\n                                    setCount(count+1)\n                                }}\n                                // value={editValue}\n                                value={authKeyTemplate}\n                                fontSize={14}\n                                style={{ width: \"240px\"}}\n                                editorProps={{$blockScrolling: true}}\n                                height={'250px'}\n                            />\n                        </Row> \n                        <Row>\n                            Client Certificate\n                        </Row>\n                        <Row>\n                            <AceEditor\n                                mode=\"javascript\"\n                                theme=\"tomorrow\"\n                                name=\"authCert\"\n                                onChange={(newValue:string)=>{\n                                    setAuthCertTemplate(newValue)\n                                    setCount(count+1)\n                                }}\n                                // value={editValue}\n                                value={authCertTemplate}\n                                fontSize={14}\n                                height={'250px'}\n                                style={{ width: \"240px\" }}\n                                editorProps={{$blockScrolling: true}}\n                            />\n                        </Row> \n                    </>:null\n                }  \n            <Divider plain>SSL Options</Divider>\n                <Row>\n                    <Checkbox\n                        checked={disableSSLVerification}\n                        onChange={e=>{\n                            setDisableSSLVerification(e.target.checked)\n                            setCount(count+1)\n                        }} \n                    >\n                        Disable SSL Verification?\n                    </Checkbox>\n                </Row>\n                {!disableSSLVerification?\n                    <Row>\n                        <Card extra={<ExpandOutlined onClick={onOpenDialog}/>} style={{ width: 220 }} bodyStyle={{width: 220, overflow:'auto'}}>\n                        <pre>{debouncedCert}</pre>\n                        </Card>\n                        <Modal\n                            title=\"Title\"\n                            visible={visible}\n                            onOk={handleOk}\n                            confirmLoading={confirmLoading}\n                            onCancel={handleCancel}\n                            width={1000}\n                        >\n                            <AceEditor\n                                mode=\"javascript\"\n                                theme=\"tomorrow\"\n                                name=\"certEditor\"\n                                onChange={(newValue:string)=>{\n                                    setCaCertTemplate(newValue)\n                                    setCount(count+1)\n                                }}\n                                // value={editValue}\n                                value={caCertTemplate}\n                                fontSize={14}\n                                style={{ width: \"900px\"}}\n                                editorProps={{$blockScrolling: true}}\n                            />\n                        </Modal>\n                    </Row>:null                   \n                }\n \n            <Divider plain>Response</Divider>\n                <Row>\n                    Response Encoding Type\n                </Row>\n                <Row>\n                    <Select defaultValue={EncodingData[0]} value={encodingTemplate} onChange={e=>{\n                        setEncodingTemplate(e)\n                        setCount(count+1)\n                    }} style={{width:'100%'}}>\n                            {EncodingData.map(type => (\n                                <Option key={type}>{type}</Option>\n                            ))}\n                    </Select>\n                </Row> \n                <Row>\n                    Payload Path to Store Response\n                </Row>\n                <Row>\n                    <Input placeholder=\"e.g. data.foo.[0].bar\" value={responsePath} onChange={e=>{\n                        setResponsePath(e)\n                        setCount(count+1)\n                    }}/>\n                </Row>  \n            <Divider plain>Error</Divider>\n                <Row>\n                <Radio.Group value={errorBehavior} onChange={e=>{\n                        setErrorBehavior(e.target.value)\n                        setCount(count+1)\n                    }}>\n                    <Space direction=\"vertical\" >\n                        <Radio value={'throw'}>Error The Workflow</Radio>\n                        <Radio value={'payloadPath'}>Store HTTP Error At Payload Path</Radio>\n                    </Space>\n                </Radio.Group>\n                </Row> \n                {\n                    errorBehavior==='payloadPath'\n                    ?<>\n                        <Row>\n                            Store Error Response\n                        </Row>\n                        <Row>\n                            <Input placeholder=\"e.g. data.foo.[0].error\" value={errorPath} onChange={e=>{\n                                setErrorPath(e.target.value)\n                                setCount(count+1)\n                            }}/>\n                        </Row>                       \n                    </>:null\n                }\n \n        </Space>\n    )\n}","import { useEffect, useState } from \"react\"\n\nexport const useDebounce = <T>(value:T,delay?:number)=> {\n    const [debouncedValue,setDebouncedValue] = useState(value)\n    useEffect(()=>{\n        let timeout = setTimeout(()=>{\n            setDebouncedValue(value)\n        },delay)\n        return ()=>clearTimeout(timeout)\n    },[value,delay])\n    return debouncedValue\n}"],"names":["Option","Select","ReqMethodData","EncodingData","options","value","label","optionV","FakeData","props","cells","cell","toJSON","React","visible","setVisible","bodyVisible","setBodyVisible","confirmLoading","setConfirmLoading","useState","config","method","setReqMethod","uriTemplate","setUriTemplate","timeoutTemplate","setTimeoutTemplate","requestEncodingTemplate","setRequestEncodingTemplate","bodyTemplate","setBodyTemplate","debouncedEdit","useDebounce","authType","setAuthType","authCredentials","usernameTemplate","setUsernameTemplate","passwordTemplate","setPasswordTemplate","keyTemplate","authKeyTemplate","setAuthKeyTemplate","certTemplate","authCertTemplate","setAuthCertTemplate","disableSSLVerification","setDisableSSLVerification","caCertTemplate","setCaCertTemplate","debouncedCert","encodingTemplate","setEncodingTemplate","responsePath","setResponsePath","errorBehavior","setErrorBehavior","errorPath","setErrorPath","headerInfo","tags","setTags","cascader","count","setCount","useEffect","cellId","prop","onOpenBodyDialog","handleOk","setTimeout","handleCancel","console","log","requestHeadOption","Object","map","item","children","direction","plain","defaultValue","onChange","style","width","type","placeholder","e","target","bodyStyle","overflow","padding","onClick","float","top","title","onOk","onCancel","mode","theme","name","newValue","fontSize","editorProps","$blockScrolling","align","key","valueTemplate","tag","index","show","className","closable","onClose","removedTag","tempTags","filter","JSON","stringify","handleClose","length","slice","height","checked","extra","delay","debouncedValue","setDebouncedValue","timeout","clearTimeout"],"sourceRoot":""}