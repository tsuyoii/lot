{"version":3,"file":"static/js/290.05448785.chunk.js","mappings":"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","sources":["nodeComponents/data/serialWriteComponent.tsx"],"sourcesContent":["import { Card, Col, Divider, Input, Modal, Radio, Row, Select, Space, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\"\nimport { useDebounce } from \"../../utils/utils\";\nimport { ExpandOutlined, PlusOutlined } from '@ant-design/icons';\n\ninterface Params {\n    builder: string;\n    cell?:any ;\n    cellId?:string;\n}\nconst {Option} = Select\nconst ParityData = ['none','even','mark','odd','space']\nconst BaudRateData = ['110','300','600','1200']\nconst DataBitsData = [5,6,7,8]\nconst WOnEncodData = ['ascii','utf8','utf16le','base64','binary','hex']\nexport const FakeData: React.FC<Params> = (props) => {\n    const cells = props.cell?.toJSON()\n    const [pathTemplate, setPath] = useState(cells.config?.pathTemplate||'')\n    const [items, setItems] = useState(BaudRateData);\n    const [name,setName] = useState('')\n    const [baudRateTemplate, setBaudRate] = useState(cells.config?.baudRateTemplate ||'');\n    const [parityTemplate, setParity] = useState(cells.config?.parityTemplate || ParityData[1]);\n    const [dataBitsTemplate,setDataBits] = useState(cells.config?.dataBitsTemplate || DataBitsData[0])\n    const [stopBitsTemplate,setStopBits] = useState(cells.config?.stopBitsTemplate || 1)\n    const [rtsctsTemplate, setRtscts] = useState(cells.config?.rtsctsTemplate ||true);\n    const [writeTemplate, setWrite] = useState(cells.config?.writeTemplate||'');\n    const [resultPath, setResultPath] = useState(cells.config?.resultPath || '');\n    const [encodeTemplate, setEncoding] = useState(cells.config?.encodeTemplate || WOnEncodData[0]);\n  \n    useEffect(()=>{\n        if(props){\n            const cells = props.cell?.toJSON()\n            setPath(cells.config?.pathTemplate)\n            if(!items.includes(cells.config?.baudRateTemplate+'')){\n                setItems([...items, cells.config?.baudRateTemplate?.toString()]);\n            }\n            setBaudRate(cells.config?.baudRateTemplate)\n            setParity(cells.config?.parityTemplate)\n            setDataBits(cells.config?.dataBitsTemplate)\n            setStopBits(cells.config?.stopBitsTemplate)\n            setRtscts(cells.config?.rtsctsTemplate)\n            setWrite(cells.config?.writeTemplate)\n            setEncoding(cells.config?.encodeTemplate)  \n            setResultPath(cells.config?.resultPath)  \n        }    \n    },[props.cellId])\n\n    useEffect(()=>{\n        props.cell?.prop('config', {\n            pathTemplate,\n            baudRateTemplate,\n            parityTemplate,\n            dataBitsTemplate,\n            stopBitsTemplate,\n            rtsctsTemplate,\n            writeTemplate,\n            encodeTemplate,\n            resultPath\n        })\n    },[props.cellId,\n        pathTemplate,\n        baudRateTemplate,\n        parityTemplate,\n        dataBitsTemplate,\n        stopBitsTemplate,\n        rtsctsTemplate,\n        writeTemplate,\n        encodeTemplate,\n        resultPath])\n    \n    const onBaudRateChange = (event: any) => {\n      setBaudRate(event);\n    };\n  \n    const addItem = (e:any) => {\n      e.preventDefault();\n      setItems([...items, name]);\n      setName('');\n    };\n\n    const handleParityChange = (value:string)=>{\n        setParity(value)\n    }\n    const onRtsctsChange = (e: any) => {\n        setRtscts(e.target.value);\n    };\n    \n\n\n    return (\n        <Space direction=\"vertical\">\n        <Divider plain>Configuration</Divider>\n            <Row>\n                Serial Path Template\n            </Row>\n            <Row>\n                <Input placeholder=\"e.g./dev/ROBOT\" value={pathTemplate} onChange={(v)=>setPath(v.target.value)}/>\n            </Row>\n            <Row>\n                Baud Rate Template\n            </Row>\n            <Row>\n                <Select\n                    style={{ width: 200 }}\n                    placeholder=\"custom dropdown render\"\n                    value={baudRateTemplate}\n                    onChange={onBaudRateChange}\n                    dropdownRender={menu => (\n                        <>\n                        {menu}\n                        <Divider style={{ margin: '8px 0' }} />\n                        <Space align=\"center\" style={{ padding: '0 8px 4px' }}>\n                            <Input placeholder=\"Please enter item\" value={name}/>\n                            <Typography.Link onClick={addItem} style={{ whiteSpace: 'nowrap' }}>\n                            <PlusOutlined /> Add item\n                            </Typography.Link>\n                        </Space>\n                        </>\n                    )}\n                    >\n                    {items.map(item => (\n                        <Option key={item}>{item}</Option>\n                    ))}\n                </Select>\n            </Row>\n            <Row>\n                Parity Template\n            </Row>\n            <Row>\n                <Select defaultValue={ParityData[1]} value={parityTemplate} onChange={handleParityChange} style={{width:'100%'}}>\n                    {ParityData.map(type => (\n                        <Option key={type}>{type}</Option>\n                    ))}\n                </Select>\n            </Row>\n            <Row>\n                Data Bits Template\n            </Row>\n            <Row>\n                <Select defaultValue={DataBitsData[0]} value={dataBitsTemplate}  onChange={(v)=>setDataBits(v)} style={{width:'100%'}}>\n                    {DataBitsData.map(type => (\n                        <Option key={type}>{type}</Option>\n                    ))}\n                </Select>\n            </Row>\n            <Row>\n                Stop Bits Template\n            </Row>\n            <Row>\n                <Select defaultValue={1} value={stopBitsTemplate}  onChange={(v)=>setStopBits(+v)} style={{width:'100%'}}>\n                    <Option key={1}>1</Option>\n                    <Option key={2}>2</Option>\n                </Select>\n            </Row>\n            <Row>\n                RTS/CTS Template\n            </Row>\n            <Row>\n                <Radio.Group onChange={onRtsctsChange} value={rtsctsTemplate}>\n                    <Radio value={true}>true</Radio>\n                    <Radio value={false}>false</Radio>\n                </Radio.Group>\n            </Row>\n            <Row>\n                Write Template\n            </Row>\n            <Row>\n                <Input placeholder=\"e.g.hello\\r\" value={writeTemplate} onChange={(v)=>setWrite(v.target.value)} />\n            </Row>\n            <Row>\n                Write Encoding\n            </Row>\n            <Row>\n                <Select defaultValue={WOnEncodData[0]} value={encodeTemplate}  onChange={(v)=>setEncoding(v)}  style={{width:'100%'}}>\n                    {WOnEncodData.map(type => (\n                        <Option key={type}>{type}</Option>\n                    ))}\n                </Select>\n            </Row>\n            <Divider plain>Result</Divider>\n            <Row>\n                Result Path\n            </Row>\n            <Row>\n                <Input placeholder=\"e.g.serialResult\" value={resultPath} onChange={(v)=>setResultPath(v.target.value)} />\n            </Row>\n        </Space>\n    );\n};"],"names":["Option","Select","ParityData","BaudRateData","DataBitsData","WOnEncodData","FakeData","props","cells","cell","toJSON","useState","config","pathTemplate","setPath","items","setItems","name","setName","baudRateTemplate","setBaudRate","parityTemplate","setParity","dataBitsTemplate","setDataBits","stopBitsTemplate","setStopBits","rtsctsTemplate","setRtscts","writeTemplate","setWrite","resultPath","setResultPath","encodeTemplate","setEncoding","useEffect","includes","toString","cellId","prop","addItem","e","preventDefault","direction","plain","placeholder","value","onChange","v","target","style","width","event","dropdownRender","menu","margin","align","padding","onClick","whiteSpace","map","item","defaultValue","type"],"sourceRoot":""}